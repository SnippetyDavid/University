//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace UnitTestClientApplication.ServiceReference2 {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference2.UserService")]
    public interface UserService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/UserService/InsertUserDetails", ReplyAction="http://tempuri.org/UserService/InsertUserDetailsResponse")]
        bool InsertUserDetails(string username, string password, string email);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/UserService/InsertUserDetails", ReplyAction="http://tempuri.org/UserService/InsertUserDetailsResponse")]
        System.Threading.Tasks.Task<bool> InsertUserDetailsAsync(string username, string password, string email);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/UserService/RegisterUser", ReplyAction="http://tempuri.org/UserService/RegisterUserResponse")]
        bool RegisterUser(string username, string password, string email, bool projectManager, bool scrumMaster, bool developer, string skillSet);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/UserService/RegisterUser", ReplyAction="http://tempuri.org/UserService/RegisterUserResponse")]
        System.Threading.Tasks.Task<bool> RegisterUserAsync(string username, string password, string email, bool projectManager, bool scrumMaster, bool developer, string skillSet);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/UserService/checkUserDetails", ReplyAction="http://tempuri.org/UserService/checkUserDetailsResponse")]
        bool checkUserDetails(string username, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/UserService/checkUserDetails", ReplyAction="http://tempuri.org/UserService/checkUserDetailsResponse")]
        System.Threading.Tasks.Task<bool> checkUserDetailsAsync(string username, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/UserService/checkRegisteredUserDetails", ReplyAction="http://tempuri.org/UserService/checkRegisteredUserDetailsResponse")]
        bool checkRegisteredUserDetails(string email);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/UserService/checkRegisteredUserDetails", ReplyAction="http://tempuri.org/UserService/checkRegisteredUserDetailsResponse")]
        System.Threading.Tasks.Task<bool> checkRegisteredUserDetailsAsync(string email);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/UserService/GetUserDetails", ReplyAction="http://tempuri.org/UserService/GetUserDetailsResponse")]
        SharedModelLibrary.UserModel GetUserDetails(string username);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/UserService/GetUserDetails", ReplyAction="http://tempuri.org/UserService/GetUserDetailsResponse")]
        System.Threading.Tasks.Task<SharedModelLibrary.UserModel> GetUserDetailsAsync(string username);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/UserService/getAllUsers", ReplyAction="http://tempuri.org/UserService/getAllUsersResponse")]
        SharedModelLibrary.UserModel[] getAllUsers();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/UserService/getAllUsers", ReplyAction="http://tempuri.org/UserService/getAllUsersResponse")]
        System.Threading.Tasks.Task<SharedModelLibrary.UserModel[]> getAllUsersAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/UserService/searchUsers", ReplyAction="http://tempuri.org/UserService/searchUsersResponse")]
        SharedModelLibrary.UserModel[] searchUsers(string username, string email, string skillSet);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/UserService/searchUsers", ReplyAction="http://tempuri.org/UserService/searchUsersResponse")]
        System.Threading.Tasks.Task<SharedModelLibrary.UserModel[]> searchUsersAsync(string username, string email, string skillSet);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/UserService/ShowTeamMembersByProject", ReplyAction="http://tempuri.org/UserService/ShowTeamMembersByProjectResponse")]
        SharedModelLibrary.UserModel[] ShowTeamMembersByProject(string projectName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/UserService/ShowTeamMembersByProject", ReplyAction="http://tempuri.org/UserService/ShowTeamMembersByProjectResponse")]
        System.Threading.Tasks.Task<SharedModelLibrary.UserModel[]> ShowTeamMembersByProjectAsync(string projectName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/UserService/searchUserSkillset", ReplyAction="http://tempuri.org/UserService/searchUserSkillsetResponse")]
        SharedModelLibrary.UserModel[] searchUserSkillset(string skillset);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/UserService/searchUserSkillset", ReplyAction="http://tempuri.org/UserService/searchUserSkillsetResponse")]
        System.Threading.Tasks.Task<SharedModelLibrary.UserModel[]> searchUserSkillsetAsync(string skillset);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface UserServiceChannel : UnitTestClientApplication.ServiceReference2.UserService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class UserServiceClient : System.ServiceModel.ClientBase<UnitTestClientApplication.ServiceReference2.UserService>, UnitTestClientApplication.ServiceReference2.UserService {
        
        public UserServiceClient() {
        }
        
        public UserServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public UserServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public UserServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public UserServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public bool InsertUserDetails(string username, string password, string email) {
            return base.Channel.InsertUserDetails(username, password, email);
        }
        
        public System.Threading.Tasks.Task<bool> InsertUserDetailsAsync(string username, string password, string email) {
            return base.Channel.InsertUserDetailsAsync(username, password, email);
        }
        
        public bool RegisterUser(string username, string password, string email, bool projectManager, bool scrumMaster, bool developer, string skillSet) {
            return base.Channel.RegisterUser(username, password, email, projectManager, scrumMaster, developer, skillSet);
        }
        
        public System.Threading.Tasks.Task<bool> RegisterUserAsync(string username, string password, string email, bool projectManager, bool scrumMaster, bool developer, string skillSet) {
            return base.Channel.RegisterUserAsync(username, password, email, projectManager, scrumMaster, developer, skillSet);
        }
        
        public bool checkUserDetails(string username, string password) {
            return base.Channel.checkUserDetails(username, password);
        }
        
        public System.Threading.Tasks.Task<bool> checkUserDetailsAsync(string username, string password) {
            return base.Channel.checkUserDetailsAsync(username, password);
        }
        
        public bool checkRegisteredUserDetails(string email) {
            return base.Channel.checkRegisteredUserDetails(email);
        }
        
        public System.Threading.Tasks.Task<bool> checkRegisteredUserDetailsAsync(string email) {
            return base.Channel.checkRegisteredUserDetailsAsync(email);
        }
        
        public SharedModelLibrary.UserModel GetUserDetails(string username) {
            return base.Channel.GetUserDetails(username);
        }
        
        public System.Threading.Tasks.Task<SharedModelLibrary.UserModel> GetUserDetailsAsync(string username) {
            return base.Channel.GetUserDetailsAsync(username);
        }
        
        public SharedModelLibrary.UserModel[] getAllUsers() {
            return base.Channel.getAllUsers();
        }
        
        public System.Threading.Tasks.Task<SharedModelLibrary.UserModel[]> getAllUsersAsync() {
            return base.Channel.getAllUsersAsync();
        }
        
        public SharedModelLibrary.UserModel[] searchUsers(string username, string email, string skillSet) {
            return base.Channel.searchUsers(username, email, skillSet);
        }
        
        public System.Threading.Tasks.Task<SharedModelLibrary.UserModel[]> searchUsersAsync(string username, string email, string skillSet) {
            return base.Channel.searchUsersAsync(username, email, skillSet);
        }
        
        public SharedModelLibrary.UserModel[] ShowTeamMembersByProject(string projectName) {
            return base.Channel.ShowTeamMembersByProject(projectName);
        }
        
        public System.Threading.Tasks.Task<SharedModelLibrary.UserModel[]> ShowTeamMembersByProjectAsync(string projectName) {
            return base.Channel.ShowTeamMembersByProjectAsync(projectName);
        }
        
        public SharedModelLibrary.UserModel[] searchUserSkillset(string skillset) {
            return base.Channel.searchUserSkillset(skillset);
        }
        
        public System.Threading.Tasks.Task<SharedModelLibrary.UserModel[]> searchUserSkillsetAsync(string skillset) {
            return base.Channel.searchUserSkillsetAsync(skillset);
        }
    }
}
